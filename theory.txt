Структуры данных.
1. Что такое структура данных?
   Структура данных – это программная единица, позволяющая хранить
   и обрабатывать машиной однотипные и/или логически связанные данные.
2. Что составляет интерфейс структуры данных?
   Интерфейс СД составляет набор функций, предоставляемый структурой
   данных для добавления, поиска, изменения и удаления элементов структуры данных.
3. Какие наиболее используемые структуры данных в программировании Вы знаете? 
   1. Массив.
   2. Стек.
   3. Очередь.
   4. Связный список
   5. Дерево
   6. Граф
   7. Префиксное дерево
   8. Хэш-таблица
4. Что такое массив, его особенности и что составляет его интерфейс? Какие бывают?
   Массив – это набор элементов, хранящихся в смежных ячейках памяти (непрерывно, 
   то есть рядом друг с другом), которые идентифицируются индексом элемента 
   массива. Вычисление положения каждого элемента происходит путем простого 
   добавления смещения к базовому элементу, т.е. ячейки памяти первого элемента,
   обычно обозначаемой именем массива. Массивы бывают одномерные, и многомерные 
   (то есть каждый элемент массива в свою очередь, является массивом).
   В интерфейс массива входят следующие функции:
   1. Вставка (Insert)
   2. Получение элемента (Get)
   3. Удаление элемента (Delete)
   4. Получение общего количества элементов массива (Size)
5. Что такое стек, его особенности и что составляет его интерфейс?
   Стек - это линейная структура данных, представляющая из себя упорядоченный набор
   элементов, в которой добавление нового элемента и удаление существующего элемента
   осуществляется с одного конца, называемой вершиной стека. Притом первым из стека
   удаляется тот элемент, который пришел туда последним. То есть реализуется принцип 
   LIFO (last in - first out) последним пришев, первым вышел.
   В интерфейс стека входят следующие функции:
   1. Проверка стека на наличие в нем элементов (empty)
   2. Запись в стек - операция записи нового элемента (push)
   3. Снятие со стека - удаление нового элемента (pop)
   4. Получение верхнего элемента без удаления (top)
6. Что такое очередь? Что составляет интерфейс?
   Очередь - это структура данных из которой удаляется первым тот элемент, который
   был добавлен первым, то есть реализуется принцип FIFO (first in, first out).
   В интерфейс очереди входят следующие функции:
   1. Добавление элемента (enqueue) возможно лишь в конец очереди
   2. Убрать элемент (dequeue) возможно только из начала очереди
   3. Проверка очереди на наличие в ней элементов (empty)
   4. Получение элемента из начала очереди без удаления (Top)
7. Что такое связный список и его интерфейс? Какие типы бывают?
   Свя́зный спи́сок — это структура данных, каждый элемент которой содержит два поля:
   первое это значение самого элемента, а второе - указатель на следующий элемент 
   в списке. Таким образом, элементы не размещены непрерывано в физической памяти.
   Заголовок (Head) связного списка указывает на первый элемент, а последний (End) на Null.
   Типы бывают однонаправленные и двунаправленные.
   Интерфейс:
   1. InsertAtEnd - вставка в конец списка.
   2. InsertAtHead - вставка в начало списка.
   3. Delete - удаление указанного элемента.
   4. DeleteAtHead - удаление первого элемента.
   5. Search - получение указанного элемента.
   6. Проверка списка на наличие в нем элемента.
      isEmpty возвращает True, если список пуст.
8. Что такое дерево? Как называются основные элементы дерева?
   Какие типы деревьев используются чаще всего?
   Какие основные операции над деревьями?
   Дерево - это иерархическая структура данных, состоящая из вершин (узлов) и ребер, 
   которые их соединяют. Основные элементы дерева это:
   0. Корень.
   1. Предок.
   2. Потомок.
   3. Лист.
   4. Узлы одного уровня.
   Чаще всего используются бинарные деревья и бинарные деревья поиска.
   Основные операции над деревьями:
   1. Поиск узла с заданным ключом.
   2. Добавление нового узла.
   3. Удаление узла или поддерева.
   4. Обход дерева.
   
